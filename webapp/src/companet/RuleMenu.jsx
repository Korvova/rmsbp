import { useState } from 'react';
import './rulemenu.css';

const RULES = [
   { id: '',           label: '–ë–µ–∑ —É—Å–ª–æ–≤–∏—è' },
  { id: 'afterAny',  label: '–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ª—é–±–æ–π —Å–≤—è–∑–∞–Ω–Ω–æ–π' },
  { id: 'afterAnyDelay',  label: '‚Ä¶—á–µ—Ä–µ–∑ X-–¥–Ω–µ–π (‚è∞)' },
  { id: 'afterAnyDate',   label: '‚Ä¶–≤ –¥–∞—Ç—É (üìÖ)' },
  { id: 'atDate',         label: '–ó–∞–ø—É—Å–∫ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É (üìÖ)' },
  { id: 'afterAll',       label: '–¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö —Å–≤—è–∑–∞–Ω–Ω—ã—Ö' },
  { id: 'afterSelected',  label: '–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–≤—è–∑–µ–π' },
  { id: 'cancelIfPrevCanceled',          label: '–û—Ç–º–µ–Ω–∏—Ç—å, –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –æ—Ç–º–µ–Ω–µ–Ω–∞' },
  { id: 'cancelIfAnySelectedCanceled',   label: '–û—Ç–º–µ–Ω–∏—Ç—å, –µ—Å–ª–∏ –æ–¥–Ω–∞ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ—Ç–º–µ–Ω–µ–Ω–∞' },
];

export default function RuleMenu({ value, onChange, onCancel, onFreeze }) {
  const [open, setOpen] = useState(false);

  return (
    <div className="rule-wrapper">
      <button className="rule-btn" onClick={() => setOpen(o => !o)}>‚öôÔ∏è</button>

      {open && (
        <div className="rule-menu">
          <strong style={{ fontSize: 11 }}>–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ—Å–ª–µ:</strong>
          {RULES.map(r => (
            <label key={r.id}>
              <input
                type="radio"
                name="rule"
                checked={value === r.id}
                onChange={() => onChange(r.id)}
              />
              {r.label}
            </label>
          ))}

          <hr />
          <button onClick={onCancel}>‚ùå –û—Ç–º–µ–Ω–∞</button>
          <button onClick={onFreeze}>‚ùÑÔ∏è –ó–∞–º–æ—Ä–æ–∑–∏—Ç—å</button>
        </div>
      )}
    </div>
  );
}
